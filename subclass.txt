Implements ISubclassedWindow

Private Sub Subclass()
    If Not SubclassWindow(Me.hwnd, Me, EnumSubclassID.escidCity) Then
        Debug.Print "Subclassing failed!"
    End If
    
    ' tell the controls to negotiate the correct format with the form
    SendMessageAsLong lvTypes.hwnd, WM_NOTIFYFORMAT, Me.hwnd, NF_REQUERY
End Sub

Private Function ISubclassedWindow_HandleMessage(ByVal hwnd As Long, ByVal uMsg As Long, ByVal wParam As Long, ByVal lParam As Long, ByVal eSubclassID As EnumSubclassID, bCallDefProc As Boolean) As Long
    Dim lRet As Long
    
    On Error GoTo StdHandler_End
    
    If eSubclassID = EnumSubclassID.escidCity Then
        lRet = HandleMessage_Form(hwnd, uMsg, wParam, lParam, bCallDefProc)
    End If
    
StdHandler_End:
    ISubclassedWindow_HandleMessage = lRet
End Function

Private Function HandleMessage_Form(ByVal hwnd As Long, ByVal uMsg As Long, ByVal wParam As Long, ByVal lParam As Long, bCallDefProc As Boolean) As Long
    Dim lRet As Long
    
    On Error GoTo StdHandler_End
    
    If uMsg = WM_NOTIFYFORMAT Then
        ' give the control a chance to request Unicode notifications
        lRet = SendMessageAsLong(wParam, OCM__BASE + uMsg, wParam, lParam)
        
        bCallDefProc = False
    End If
    
StdHandler_End:
    HandleMessage_Form = lRet
End Function

// load
    Subclass

// unload
    UnSubclassWindow Me.hwnd, EnumSubclassID.escidCity
